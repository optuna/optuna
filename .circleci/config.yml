version: 2

workflows:
  version: 2
  commit-build:
    jobs:
      - checks
      - document
      - doctest
      - tests-python38
      - tests-python37
      - tests-python36
      - tests-python35
      - codecov
  daily-build:
    triggers:
      - schedule:
          cron: "0 15 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - checks
      - document
      - examples-python38
      - examples-python37
      - examples-python36
      - examples-python35

jobs:

  # Lint and static type checking

  checks:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - run: &checkout-merge-master
          name: checkout-merge-master
          command: |
            set -ex
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
                FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"
                git fetch -u origin ${FETCH_REFS}
                git checkout "pr/${CIRCLE_PR_NUMBER}/merge"
            fi

      - run:
          name: install
          command: |
            python -m venv venv || virtualenv venv
            . venv/bin/activate
            # TODO(Yanase): Remove version constraint after lightgbm and mxnet support pip>=20.
            pip install -U 'pip<20'
            pip install --progress-bar off .[checking]

      - run:
          name: autopep8
          command: |
            . venv/bin/activate
            autopep8 . -r --diff --exit-code

      - run:
          name: flake8
          command: |
            . venv/bin/activate
            flake8 .

      - run:
          name: mypy
          command: |
            . venv/bin/activate
            mypy --disallow-untyped-defs --ignore-missing-imports .

  document:
    docker:
      - image: readthedocs/build:latest
    steps:
      - checkout

      - run: *checkout-merge-master

      - run:
          name: install
          command: |
            python -m venv venv || virtualenv venv --python=python3
            . venv/bin/activate
            # TODO(Yanase): Remove version constraint after lightgbm and mxnet support pip>=20.
            pip install -U 'pip<20'
            pip install --progress-bar off .[document]

      - run:
          name: build
          command: |
            . venv/bin/activate
            cd docs
            make html

  doctest:
    docker:
      - image: readthedocs/build:latest
    steps:
      - checkout

      - run: *checkout-merge-master

      - run:
          name: install
          command: |
            python -m venv venv || virtualenv venv --python=python3
            . venv/bin/activate
            # TODO(Yanase): Remove version constraint after lightgbm and mxnet support pip>=20.
            pip install -U 'pip<20'
            pip install --progress-bar off .[doctest,document]

      - run:
          name: build
          command: |
            . venv/bin/activate
            cd docs
            make doctest

  # Unit tests

  tests-python37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - run: *checkout-merge-master

      - run: &install
          name: install
          command: |
            sudo apt-get update
            sudo apt-get -y install openmpi-bin libopenmpi-dev
            python -m venv venv || virtualenv venv
            . venv/bin/activate
            # TODO(Yanase): Remove version constraint after lightgbm and mxnet support pip>=20.
            pip install -U 'pip<20'
            pip install --progress-bar off -U setuptools
            python setup.py sdist

            # Install minimal dependencies and confirm that `import optuna` is successful.
            pip install --progress-bar off $(ls dist/*.tar.gz)
            python -c 'import optuna'

            # Install all dependencies needed for testing.
            pip install --progress-bar off $(ls dist/*.tar.gz)[testing]

      - run: &tests
          name: tests
          command: |
            . venv/bin/activate
            pytest tests
          environment:
            OMP_NUM_THREADS: 1

      - run: &tests-mn
          name: tests-mn
          command: |
            . venv/bin/activate
            mpirun -n 2 -- pytest tests/integration_tests/test_chainermn.py
          environment:
            OMP_NUM_THREADS: 1

  tests-python38:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout

      - run: *checkout-merge-master

      - run: *install

      - run:
          <<: *tests
          command: |
            . venv/bin/activate
            pytest tests --ignore tests/integration_tests/test_fastai.py \
                --ignore tests/integration_tests/test_keras.py \
                --ignore tests/integration_tests/test_pytorch_lightning.py \
                --ignore tests/integration_tests/test_pytorch_ignite.py \
                --ignore tests/integration_tests/test_tensorflow.py \
                --ignore tests/integration_tests/test_tfkeras.py

      - run: *tests-mn

  tests-python36:
    docker:
      - image: circleci/python:3.6
    steps:
      [checkout, run: *checkout-merge-master, run: *install, run: *tests, run: *tests-mn]

  tests-python35:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout

      - run: *checkout-merge-master

      - run: *install

      - run:
          <<: *tests
          command: |
            . venv/bin/activate
            pytest tests --ignore tests/integration_tests/test_pytorch_lightning.py --ignore tests/integration_tests/test_fastai.py

      - run: *tests-mn

  codecov:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - run: *checkout-merge-master

      - run: *install

      - run:
          name: install-codecov
          command: |
            . venv/bin/activate
            pip install --progress-bar off .[codecov]

      - run:
          name: codecov
          command: |
            . venv/bin/activate
            pytest --cov=./ tests
            codecov
          environment:
            OMP_NUM_THREADS: 1

  # Examples

  examples-python37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - run: *checkout-merge-master

      - run: *install

      - run: &install-examples
          name: install-examples
          command: |
            . venv/bin/activate
            pip install --progress-bar off $(ls dist/*.tar.gz)[example]

      - run: &examples
          name: examples
          command: |
            . venv/bin/activate
            for file in `find examples -name '*.py' -not -name '*_distributed.py' | grep -vE "$IGNORES"`
            do
               python $file
               if grep -e '\-\-pruning' $file > /dev/null; then
                  python $file --pruning
               fi
            done
          environment:
            OMP_NUM_THREADS: 1
            IGNORES: chainermn_.*

      - run: &examples-mn
          name: examples-mn
          command: |
            . venv/bin/activate
            STORAGE_URL=sqlite:///example.db
            for file in `find examples -name 'chainermn_*.py'`
            do
                STUDY_NAME=`optuna create-study --storage $STORAGE_URL`
                mpirun -n 2 -- python $file $STUDY_NAME $STORAGE_URL
            done
          environment:
            OMP_NUM_THREADS: 1

  examples-python38:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout

      - run: *checkout-merge-master

      - run: *install

      - run: *install-examples

      - run:
          <<: *examples
          environment:
            OMP_NUM_THREADS: 1
            IGNORES: chainermn_.*|dask_ml_.*|keras_.*|pytorch_.*|tensorflow_.*|tfkeras_.*|fastai_.*

      - run: *examples-mn

  examples-python36:
    docker:
      - image: circleci/python:3.6
    steps:
      [checkout, run: *checkout-merge-master, run: *install, run: *install-examples, run: *examples, run: *examples-mn]

  examples-python35:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout

      - run: *checkout-merge-master

      - run: *install

      - run: *install-examples

      - run:
          <<: *examples
          environment:
            OMP_NUM_THREADS: 1
            IGNORES: chainermn_.*|pytorch_lightning.*|fastai_.*

      - run: *examples-mn
