version: 2.1

orbs:
  path-filtering: circleci/path-filtering@0.0.1

workflows:
  version: 2
  commit-build:
    jobs:
      - document
      - path-filtering/filter:
          base-revision: main
          config-path: .circleci/continue-config.yml
          mapping: |
            (optuna/visualization/.* | visual_regression_tests/.*) visual-regression-tests true

jobs:

  # TODO (crcrpar): Set cache for sphinx gallery to avoid document job being bottleneck.
  document:
    docker:
      - image: readthedocs/build:latest
    steps:
      - checkout

      - run: &checkout-merge-master
          name: checkout-merge-master
          command: |
            set -ex
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
                FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"
                git fetch -u origin ${FETCH_REFS}
                git checkout "pr/${CIRCLE_PR_NUMBER}/merge"
            fi

      - run:
          name: install
          command: |
            python -m venv venv || virtualenv venv --python=python3.8
            . venv/bin/activate
            pip install -U pip
            pip install --progress-bar off .[document]

      - run:
          name: build
          command: |
            . venv/bin/activate
            cd docs
            make html
          environment:
            OMP_NUM_THREADS: 1

      - store_artifacts:
          path: ./docs/build/html
  visual-regression-tests:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout

      - run: &checkout-merge-master
          name: checkout-merge-master
          command: |
            set -ex
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
                FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"
                git fetch -u origin ${FETCH_REFS}
                git checkout "pr/${CIRCLE_PR_NUMBER}/merge"
            fi
      - run:
          name: install optuna
          command: |
            python -m venv venv || virtualenv venv --python=python3.8
            . venv/bin/activate
            pip install -U pip
            pip install --progress-bar off .
            pip install --progress-bar off .[visual_regression_test]
      - run:
          name: build
          command: |
            . venv/bin/activate
            cd visual_regression_tests/
            python visual_regression_tests.py --heavy --output-dir ./public
          environment:
            OMP_NUM_THREADS: 1

      - store_artifacts:
          path: ./visual_regression_tests/public