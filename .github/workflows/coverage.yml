name: Coverage

on:
  push:
    branches:
      - master
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:

  coverage-run:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        group: [1, 2, 3, 4]

    # Not intended for forks.
    if: github.repository == 'optuna/optuna'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Setup cache
      uses: actions/cache@v3
      env:
        cache-name: coverage
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get -y install openmpi-bin libopenmpi-dev libopenblas-dev

    - name: Install
      run: |
        python -m pip install --upgrade pip

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version

        pip install --progress-bar off .[test] --extra-index-url https://download.pytorch.org/whl/cpu
        pip install --progress-bar off .[optional] --extra-index-url https://download.pytorch.org/whl/cpu

        echo 'import coverage; coverage.process_startup()' > sitecustomize.py

    - name: Output installed packages
      run: |
        pip freeze --all
    - name: Output dependency tree
      run: |
        pip install pipdeptree
        pipdeptree


    - name: Tests group ${{ matrix.group }}
      env:
        OMP_NUM_THREADS: 1
        PYTHONPATH: .  # To invoke sitecutomize.py
        COVERAGE_PROCESS_START: .coveragerc  # https://coverage.readthedocs.io/en/6.4.1/subprocess.html
        COVERAGE_COVERAGE: yes  # https://github.com/nedbat/coveragepy/blob/65bf33fc03209ffb01bbbc0d900017614645ee7a/coverage/control.py#L255-L261
      run: |
        coverage run --data-file=coverage-${{ matrix.group }} --source=optuna -m pytest tests -m "not skip_coverage and not slow" -v --splits 4 --group ${{ matrix.group }}
        ls -la .coverage*
    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.group }}
        path: coverage-${{ matrix.group }}*
        if-no-files-found: error

  coverage-upload:
    needs: coverage-run
    runs-on: ubuntu-latest

    # Not intended for forks.
    if: github.repository == 'optuna/optuna'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
    - name: Download coverage datum
      uses: actions/download-artifact@v4
      with:
        path: coverages
        pattern: coverage-*
        merge-multiple: true
    - name: Show coverage datum
      run: |
        ls -l coverages
    - name: Combine coverage files
      run: |
        pip install coverage
        coverage combine coverages/coverage-*
        coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      env:
        COVERAGE_PROCESS_START: .coveragerc  # https://coverage.readthedocs.io/en/6.4.1/subprocess.html
        COVERAGE_COVERAGE: yes  # https://github.com/nedbat/coveragepy/blob/65bf33fc03209ffb01bbbc0d900017614645ee7a/coverage/control.py#L255-L261
      with:
        files: ./coverage.xml
        verbose: true
