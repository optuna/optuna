# Run tests and integration tests on Mac, which are triggered by each master push.
# Currently, Python3.8 is only used as an environment.
# This is mainly for the sake of speed.
name: mac-tests

on:
  push:
    branches:
      - master
  pull_request:
    paths:
      - '.github/workflows/mac-tests.yml'
  schedule:
    - cron: '0 23 * * SUN-THU'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  tests-mac:
    runs-on: macos-latest

    # Not intended for forks.
    if: github.repository == 'optuna/optuna'
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-3.8-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-3.8-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools
        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version
        pip install --progress-bar off .[test]
        pip install --progress-bar off .[optional]
        # Required for samplers_tests/test_samplers.py.
        # TODO(hvy): Fix samplers_tests/test_samplers.py to not require optional depenendencies and remove these installs.
        pip install scikit-optimize
        pip install cma
        pip install botorch torch==1.10.0

    - name: Tests
      run: |
        pytest tests --ignore tests/integration_tests

  tests-integration-mac:
    runs-on: macos-latest

    # Not intended for forks.
    if: github.repository == 'optuna/optuna'
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test-integration
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-3.8-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-3.8-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}

    - name: Setup mac environment
      run: |
        brew install libomp
        brew install open-mpi
        brew install openblas

    - name: Install
      run: |
        python -m pip install --upgrade pip

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version

        pip install --progress-bar off .[test]
        pip install --progress-bar off .[optional]
        pip install --progress-bar off .[integration]


    - name: Tests
      run: |
        # 'pytest tests/integration_tests' causes segmentation fault at the end of
        # tests/integration_tests/test_lightgbm.py as shown in
        # https://github.com/optuna/optuna/issues/2695. It can be completed if we
        # execute tests individually.
        # TODO(nzw0301): Remove the skip of lightning when resolving
        # https://github.com/optuna/optuna/issues/3418.
        for file in `find tests/integration_tests -name 'test_*.py' \
          ! -name '*test_pytorch_lightning.py' -print`;
        do
          pytest $file;
        done

      env:
        OMP_NUM_THREADS: 1

    - name: Tests MPI
      run: |
        mpirun -n 2 -- pytest tests/integration_tests/test_chainermn.py
        mpirun -n 2 -- pytest tests/integration_tests/test_pytorch_distributed.py
      env:
        OMP_NUM_THREADS: 1
