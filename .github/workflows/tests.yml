name: Tests

on:
  push:
    branches:
      - master
  pull_request: {}
  schedule:
    - cron: '0 23 * * SUN-THU'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup cache
      uses: actions/cache@v2
      env:
        cache-name: test
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools

        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version

        pip install --progress-bar off .[test]
        pip install --progress-bar off .[optional]

        # Required for samplers_tests/test_samplers.py.
        # TODO(hvy): Fix samplers_tests/test_samplers.py to not require optional dependencies and remove these installs.
        pip install scikit-optimize
        pip install cma
        pip install shap

    # TODO(nzw): Move `run` part to the end of `Install` after Optuna drops Python 3.6 support.
    - name: Install PyTorch and BoTorch.
      # TODO(nzw0301): Remove gpytorch if botorch supports gpytorch>1.8.
      run: pip install botorch "gpytorch<1.9.0" torch==1.11.0 --extra-index-url https://download.pytorch.org/whl/cpu
      if: matrix.python-version != '3.6'

    - name: Tests
      run: |
        pytest tests --ignore tests/integration_tests

  tests-with-older-deps:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup cache
        uses: actions/cache@v2
        env:
          cache-name: test
        with:
          path: ~/.cache/pip
          key: old-deps-${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/setup.py') }}-v1

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install --progress-bar off -U setuptools

          # Install minimal dependencies and confirm that `import optuna` is successful.
          pip install --progress-bar off alembic==1.5.1 sqlalchemy==1.3.0 cmaes==0.8.2 packaging==20.0 typing_extensions==3.7.2
          pip install --progress-bar off .
          python -c 'import optuna'
          optuna --version

          pip install --progress-bar off .[test]
          pip install --progress-bar off .[optional]

          # Required for samplers_tests/test_samplers.py.
          # TODO(hvy): Fix samplers_tests/test_samplers.py to not require optional dependencies and remove these installs.
          pip install scikit-optimize
          pip install cma
          pip install shap

      - name: Tests
        run: |
          pytest tests --ignore tests/integration_tests
