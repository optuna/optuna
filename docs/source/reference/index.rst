API Reference
=============


How to read the API documentation?
----------------------------------

======================
Preliminary: docstring
======================

Our documentation is automatically generated by `Sphinx <https://www.sphinx-doc.org/en/master/usage/installation.html>`_.
Sphinx reads `docstring <https://docs.python.org/3/glossary.html#term-docstring>`_ in each module, class, and function and generates documentation.
The style of our docstring is based on `Google Style Python Docstrings <https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`_.
For more information, please refer to the `Coding Style Conventions <https://github.com/optuna/optuna/wiki/Coding-Style-Conventions#docstrings>`_.


=======================
Documentation in Optuna
=======================

A typical example of our docstring looks like the following:

.. code-block:: python

    def some_function(self, number: int) -> int:
        """Description of a method.

        More detailed explanation for the API...
        ...

        Example:

            .. testcode::

                your_awesome_number = 1
                some_function(your_awesome_number)

                ...

        Args:
            number:
                Description of an argument.
            ...

        Raises:
            TypeError:
                Description of common error.
            ...

        """
        return number

The generated documentation displays information of Parameters (arguments), Raises (exceptions), and Return type.

Although we make our best effort to enumerate exceptions that each API would raise in our documentation,
it could raise other exceptions in runtime because an exception could be raised in third-party libraries.
An undocumented exception is not a specification, please feel free to open issue/PR
if you find documentation doesnâ€™t show an exception that we should enumerate.

Modules
-------

.. toctree::
    :maxdepth: 1

    optuna
    cli
    distributions
    exceptions
    importance
    integration
    logging
    multi_objective/index
    pruners
    samplers
    storages
    study
    trial
    visualization/index
